#!/bin/bash
#
# VV=jgphpc/mpich:ub1804_cuda92_mpi314_sph
# DD=Dockerfile.ubuntu1804lts+cuda92+mpich314+sph
#
# docker build -f ./$DD -t $VV .
# docker push $VV
# docker run
# docker run -it $VV bash
# docker run $VV bash -c "./8.exe -n 10 -s 0"
# ---
# module use /apps/dom/SI/modulefiles ;mll sarus/1.0.0-rc5-daint
# sarus pull jgphpc/mpich:ub1804_cuda92_mpi314_osu561
# srun -Ausup -Cgpu -N2 -t2 sarus run --mpi jgphpc/mpich:ub1804_cuda92_mpi314_osu561 /usr/local/libexec/osu-micro-benchmarks/mpi/pt2pt/./osu_latency
# srun --pty -n1 sarus run -t jgphpc/mpich:ub1804_cuda92_mpi314_osu561 bash
# ---
# ubuntu: precise/12.04, trusty/14.04, xenial/16.04, bionic/18.04, cosmic/18.10, disco/19.04, eoan/19.10
# debian: squeeze/6, wheezy/7, jessie/8, stretch/9
FROM jgphpc/mpich:ub1804_cuda92_mpi314

# RUN apt-get update \
#     && apt-get install -y ca-certificates patch

RUN cd /opt \
    && wget https://github.com/jgphpc/SPH-EXA_mini-app/archive/master.zip \
    && unzip master.zip \
    && cd SPH-EXA_mini-app-master/src/

# --- build with gnu/6:
ENV GNU_VERSION 6
ENV EXE $GNU_VERSION.exe
RUN cd /opt/SPH-EXA_mini-app-master/src/ \
    && g++-$GNU_VERSION -v \
    && echo \
    && g++-$GNU_VERSION sqpatch.cpp -DNDEBUG -Iinclude -std=c++14 -O2 -o $EXE \
    ;echo $? $EXE

# --- build with gnu/7:
ENV GNU_VERSION 7
ENV EXE $GNU_VERSION.exe
RUN cd /opt/SPH-EXA_mini-app-master/src/ \
    && g++-$GNU_VERSION -v \
    && echo \
    && g++-$GNU_VERSION sqpatch.cpp -DNDEBUG -Iinclude -std=c++14 -O2 -o $EXE \
    ;echo $? $EXE


# --- build with gnu/8:
ENV GNU_VERSION 8
ENV EXE $GNU_VERSION.exe
RUN cd /opt/SPH-EXA_mini-app-master/src/ \
    && g++-$GNU_VERSION -v \
    && echo \
    && g++-$GNU_VERSION sqpatch.cpp -DNDEBUG -Iinclude -std=c++14 -O2 -o $EXE \
    ;echo $? $EXE


# --- build with gnu/9:
ENV GNU_VERSION 9
ENV EXE $GNU_VERSION.exe
RUN cd /opt/SPH-EXA_mini-app-master/src/ \
    && g++-$GNU_VERSION -v \
    && echo \
    && g++-$GNU_VERSION sqpatch.cpp -DNDEBUG -Iinclude -std=c++14 -O2 -o $EXE \
    ;echo $? $EXE

WORKDIR /opt/SPH-EXA_mini-app-master/src/
CMD ["./8.exe", "-s", "0", "-n", "10"]
# TODO: reframe here
# CMD ["mpiexec", "-n", "2", "-bind-to", "core", "./osu_latency"]
