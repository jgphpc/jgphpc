[ -z "$PS1" ] && return  # comment if using visit remote

# --- bash_aliases:
# {{{
# debug: date --rfc-3339=ns > eff_bash_debug_profile
myfile="$HOME/jgphpc.git/bash/bash_aliases"
if [ -s "$myfile" ] ; then
    source $myfile
fi
# }}}

# --- secret:
# {{{
myfile="$HOME/jgphpc.git/SECRET/SECRET"
if [ -s "$myfile" ] ; then
    source $myfile
fi
# }}}

# --- modules:
# {{{
# export MODULEPATH=$HOME/jgphpc.git/modulefiles:$MODULEPATH
if [ -d $MODULEPATH ] ;then
    module unuse /apps/escha/modulefiles
    module unuse /apps/common/UES/modulefiles
    module rm xalt
fi
# }}}

# --- python:
# {{{
hpyt=`uname -n |tr -d [0-9]g |cut -c1-3`
if [ -z $hpyt ] ;then 
    echo ".bashrc: unknown hpyt=$hpyt" 
# elif [ "$hpyt" = "jp-" ] ;then
#     echo > /dev/null
else
    for ddd in local config pip cache;do
        rm -fr $HOME/.$ddd
        mkdir -p $HOME/efface/$hpyt/$ddd
        ln -fs $HOME/efface/$hpyt/$ddd $HOME/.$ddd
    done
    export PATH=$HOME/efface/$hpyt/local/bin:$PATH
fi
# }}}

# --- easybuild:
# {{{
# if [ -f /etc/os-release ] ;then
#     osid=`grep ^ID= /etc/os-release |cut -d\" -f2`
#     osv=`grep ^CPE_NAME= /etc/os-release |cut -d\" -f2 |cut -d: -f5`
# 
# elif [ -f /etc/system-release-cpe ] ;then
#     osid=`cut -d: -f3 /etc/system-release-cpe`
#     osv=`cut -d: -f5 /etc/system-release-cpe|cut -c1`
# 
# elif [ `uname -s` == "Darwin" ] ;then
#     # added by Anaconda3 4.4.0 installer
#     export PATH="/usr/local/Cellar/ANACONDA3/bin:$PATH"
# 
# fi
# # echo $osid / $osv
# 
# if [ "$osid" = "sles" ] ;then
# 
#     if [ "$osv" = "11" ] ;then
#         export EASYBUILD_PREFIX=~/easybuild/sles11
#         module use $EASYBUILD_PREFIX/modules/all
#         module load Vim/8.0
#         module load git/2.14.1
#     else
#         export EASYBUILD_PREFIX=~/easybuild/sles12
#         module use $EASYBUILD_PREFIX/modules/all
#         #module load Vim/8.0
#         #module load git/2.14.1
# 		#module load Ruby
# 		#module load htop
# 		#module load hwloc
# 		#module load likwid
# 		#module load lynx
# 		#module load tmux
# 		#module load vampir
#     fi
# 
# elif [ "$osid" = "redhat" ] || [ "$osid" = "rhel" ] ;then
#     if [ "$osv" = "6" ] ;then
#         export EASYBUILD_PREFIX=~/easybuild/rh6
#         module use $EASYBUILD_PREFIX/modules/all
#         module load vim/8.0 # extrae/3.5.2-gmvapich2-15.11
#     else
#         export EASYBUILD_PREFIX=~/easybuild/rh7
#         #TODO: module use $EASYBUILD_PREFIX/modules/all
#         #TODO: module load git/2.17.1 ncurses/6.1 Vim/8.1 #ctags/5.8 vim/8.0
#     fi
# 
# fi
# }}}

# --- ddt:
# {{{
#####   #####    #####
#    #  #    #     #
#    #  #    #     #
#    #  #    #     #
#    #  #    #     #
#####   #####      #
# ------------------------------
####   if [ -f /etc/os-release ] ;then
####       ost=`grep -m1 ^ID /etc/os-release |cut -d\" -f2 |tr [a-z] [A-Z]`
####       osv=`grep -m1 ^VERSION_ID /etc/os-release |cut -d\" -f2 |cut -d\. -f1`
####   fi
####   if [ -z $CRAY_CPU_TARGET ] ;then export CRAY_CPU_TARGET="haswell" ;fi
####   if [ -z $PE_ENV ] ;then          export PE_ENV="CRAY" ;fi
####   export configdir=$HOME/.allinea/${ost}${osv}/$CRAY_CPU_TARGET/$PE_ENV
####   mkdir -p $configdir
####   export ALLINEA_CONFIG_DIR=$configdir
####   ### export MAP_LIBRARIES_DIRECTORY=$configdir
####   # ------------------------------
####   if [ `uname -s` == 'Darwin' ] ;then
####       export PATH=/Users/piccinal/miniconda3/bin:$PATH
####   fi
# }}}

# --- detect_os:
# {{{ 
# --- hostname:
# # h=${HOSTNAME//[0-9]/}
# h=`uname -n |tr -d [0-9]`
#
# if [ -f /etc/os-release ] ;then
#     grep "CPE_NAME=" /etc/os-release |grep -q 11 ;rc11=$?  # --- suse/11
#     grep "CPE_NAME=" /etc/os-release |grep -q 12 ;rc12=$?  # --- suse/12
#     # echo A / $rc11 / $rc12 /
# fi
# 
# if [ -f /etc/issue ] ;then
#     grep -qi "Red Hat" /etc/issue;rc=$?
#     if [ "$rc" = "0" ]
#         module use /apps/common/UES/RHAT6/easybuild/modules/all
#         module load Vim
#     fi
# fi
#
# if [ `uname -s` != "Darwin" ] ;then
# fi
# }}}

# --- basel:
# {{{
# if [ "$h" == "dmi-cl-login.dmi.p.unibas.ch" ] ;then
#     module purge
#     export MODULEPATH=
#     module use   /storage/shared/projects/sph-exa/easybuild/modules/all
#     #module load git likwid Vim CMake
#     #module load EasyBuild/3.3.1
#     #module use /users/staff/dmi-dmi/piccinal/.local/easybuild/modules/all
# 	module use /opt/apps/easybuild/modules/toolchain
# 	module use /opt/apps/easybuild/modules/mpi
# 	module use /opt/apps/easybuild/modules/numlib
# 	module use /opt/apps/easybuild/modules/compiler
# 	module use /opt/apps/easybuild/modules/system
# 	module use /opt/apps/easybuild/modules/tools
#     module use /opt/apps/easybuild/modules/lang
#     module use /opt/apps/easybuild/modules/vis
#     module use /opt/apps/easybuild/modules/devel
#     module use /opt/apps/easybuild/modules/math
#     module use /opt/apps/easybuild/modules/lib
#     # module use /opt/apps/easybuild/modules/perf
# 
#     #for i in `ls -1d /storage/shared/projects/sph-exa/easybuild/modules/* |grep -v all` ;do module use $i ;done
#     module use /storage/shared/projects/sph-exa/easybuild/modules/all
#     module load  EasyBuild/3.4.1
# 
#     export PATH=/opt/apps/easybuild/software/VampirServer/9.3.0-iccifort-2017.1.132-GCC-6.3.0-2.27/bin:$PATH
#     export VAMPIR_LICENSE=/opt/apps/vampir/etc/vampir.license # vampirserver start smp
# 
# fi
# 
# # sphynx code:
# ulimit -s 2048000
# 
# }}}

# --- macjg:
# {{{
# test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
# }}}

#set +x
# echo ".bashrc END"
# export LANG=en_US.UTF-8
module rm xalt

# --- https://github.com/junegunn/fzf#usage
[ -f ~/.fzf.bash ] && source ~/.fzf.bash
